{"version":3,"file":"static/js/0.18304600.chunk.js","mappings":"wKA4GA,UArGoB,WAClB,IAAAA,GAA8BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAtCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GACpBI,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,IAAIC,gBAAgBH,EAASI,QAC5CC,EAAcH,EAAaI,IAAI,QAC/BC,EAAeL,EAAaI,IAAI,SAChCE,EAAQR,EAASS,MAAQT,EAASS,MAAQF,EAEhDG,GAAwBjB,EAAAA,EAAAA,UAASY,GAA4B,IAAGM,GAAAhB,EAAAA,EAAAA,GAAAe,EAAA,GAAzDE,EAAID,EAAA,GAAEE,EAAOF,EAAA,GACpBG,GAA0BrB,EAAAA,EAAAA,UAAS,IAAGsB,GAAApB,EAAAA,EAAAA,GAAAmB,EAAA,GAA/BE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAMhBG,GAAeC,EAAAA,EAAAA,cAAY,WAC/BtB,GAAW,GACX,IAAMuB,EAAgB,GAAAC,OArBTC,wBAqBuB,sBAAAD,OAAqBT,EAAI,WAAAS,OAAUb,GACvEe,EAAAA,EACGjB,IAAIc,GACJI,MAAK,SAACC,GACc,MAAfA,EAAIC,SACN5B,EAAS,mBACTe,EAAQ,IACRI,EAAS,IACTpB,GAAW,GAEf,IACC8B,OAAM,SAACC,GACNX,EACEW,EAAIC,SAASC,KAAKC,SAAW,mCAG/BlC,GAAW,EACb,GACJ,GAAG,CAACe,EAAMJ,EAAOV,EAAUD,EAAYoB,IAavC,OAXAe,EAAAA,EAAAA,YAAU,WAEJ3B,GAAeE,GACjBW,GAEJ,GAAG,CAACb,EAAaE,EAAcW,IAEjB,8BAAVF,GACFlB,EAAS,YAITmC,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qCAAoCC,UACjDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,UAC5DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,0BAAyBC,SAAC,+BAEtC9B,IAAgBE,IAChB6B,EAAAA,EAAAA,MAAA,KAAGF,UAAU,OAAMC,SAAA,CAAC,qEAElBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,aAAe,4BAE3CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,YAAWC,SAAC,YAAc,sBAK9CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,SACEI,KAAK,OACLC,YAAY,oBACZJ,UAAU,iDACVK,MAAO3B,EACP4B,SA3Da,SAACC,GACxB5B,EAAQ4B,EAAEC,OAAOH,MACnB,MA4DSvB,IAASiB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4BAA2BC,SAAEnB,KACtDiB,EAAAA,EAAAA,KAAA,UACEU,SAAU/C,EACVsC,UAAU,gEACVU,QAAS1B,EAAaiB,SAErBvC,GACCqC,EAAAA,EAAAA,KAACY,EAAAA,EAAc,CAACC,YAAa,iBAE7B,YAGJb,EAAAA,EAAAA,KAAA,UACEC,UAAU,wEACVU,QAAS,WACP9C,EAAS,UACX,EAAEqC,SACH,iBAOX,C","sources":["pages/VerifyEmail.jsx"],"sourcesContent":["import { useState, useEffect, useCallback } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router\";\r\nimport axios from \"axios\";\r\nimport LoadingSpinner from \"../components/loader/ButtonLoadingSpinner\";\r\n\r\nconst BASE_URL = process.env.REACT_APP_API_URL;\r\n\r\nconst VerifyEmail = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n\r\n  const searchParams = new URLSearchParams(location.search);\r\n  const codeFromUrl = searchParams.get(\"code\");\r\n  const emailFromUrl = searchParams.get(\"email\");\r\n  const email = location.state ? location.state : emailFromUrl;\r\n\r\n  const [code, setCode] = useState(codeFromUrl ? codeFromUrl : \"\");\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleCodeChange = (e) => {\r\n    setCode(e.target.value);\r\n  };\r\n\r\n  const handleVerify = useCallback(() => {\r\n    setLoading(true);\r\n    const verificationLink = `${BASE_URL}/auth/verify?code=${code}&email=${email}`;\r\n    axios\r\n      .get(verificationLink)\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          navigate(\"/email-verified\");\r\n          setCode(\"\");\r\n          setError(\"\");\r\n          setLoading(false);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setError(\r\n          err.response.data.message || \"Invalid code, please try again.\"\r\n        );\r\n\r\n        setLoading(false);\r\n      });\r\n  }, [code, email, navigate, setLoading, setError]);\r\n\r\n  useEffect(() => {\r\n    // Automatically trigger handleVerify if both code and email are present in the URL\r\n    if (codeFromUrl && emailFromUrl) {\r\n      handleVerify();\r\n    }\r\n  }, [codeFromUrl, emailFromUrl, handleVerify]);\r\n\r\n  if (error === \"Email is already verified\") {\r\n    navigate(\"/signin\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"fixed inset-0 z-10 overflow-y-auto\">\r\n      <div className=\"flex min-h-screen items-center justify-center\">\r\n        <div className=\"rounded-md bg-white p-6 shadow-md\">\r\n          <h2 className=\"mb-4 text-2xl font-bold\">Verify your email address</h2>\r\n\r\n          {!codeFromUrl && !emailFromUrl && (\r\n            <p className=\"mb-4\">\r\n              A verification code was sent to your email address. Please either\r\n              <span className=\"font-bold\"> follow </span>\r\n              the link in the email or\r\n              <span className=\"font-bold\"> enter </span>\r\n              the code below.\r\n            </p>\r\n          )}\r\n\r\n          <div className=\"mb-4\">\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Verification code\"\r\n              className=\"w-full rounded-lg border-2 border-gray-200 p-2\"\r\n              value={code}\r\n              onChange={handleCodeChange}\r\n            />\r\n          </div>\r\n          {error && <div className=\"mb-4 text-sm text-red-500\">{error}</div>}\r\n          <button\r\n            disabled={loading}\r\n            className=\"rounded-lg bg-blue-500 px-4 py-2 text-white hover:bg-blue-600\"\r\n            onClick={handleVerify}\r\n          >\r\n            {loading ? (\r\n              <LoadingSpinner loadingText={\"Verifying...\"} />\r\n            ) : (\r\n              \"Verify\"\r\n            )}\r\n          </button>\r\n          <button\r\n            className=\"ml-4 rounded-lg bg-gray-300 px-4 py-2 text-gray-800 hover:bg-gray-400\"\r\n            onClick={() => {\r\n              navigate(\"/signup\");\r\n            }}\r\n          >\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n"],"names":["_useState","useState","_useState2","_slicedToArray","loading","setLoading","navigate","useNavigate","location","useLocation","searchParams","URLSearchParams","search","codeFromUrl","get","emailFromUrl","email","state","_useState3","_useState4","code","setCode","_useState5","_useState6","error","setError","handleVerify","useCallback","verificationLink","concat","process","axios","then","res","status","catch","err","response","data","message","useEffect","_jsx","className","children","_jsxs","type","placeholder","value","onChange","e","target","disabled","onClick","LoadingSpinner","loadingText"],"sourceRoot":""}