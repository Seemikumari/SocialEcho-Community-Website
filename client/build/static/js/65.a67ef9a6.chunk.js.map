{"version":3,"file":"static/js/65.a67ef9a6.chunk.js","mappings":"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","sources":["components/admin/Tab.jsx","components/shared/CurrentTime.jsx","components/admin/Logs.jsx","components/admin/Settings.jsx","components/admin/CommunityManagement.jsx","pages/AdminPanel.jsx","redux/api/adminAPI.js","redux/actions/adminActions.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { logoutAction } from \"../../redux/actions/adminActions\";\r\nimport ButtonLoadingSpinner from \"../loader/ButtonLoadingSpinner\";\r\nimport { BiLogOut } from \"react-icons/bi\";\r\nimport { BsPeople, BsWindowStack } from \"react-icons/bs\";\r\nimport { IoSettingsOutline } from \"react-icons/io5\";\r\n\r\nconst Tab = ({ activeTab, handleTabClick }) => {\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n  const [loggingOut, setLoggingOut] = useState(false);\r\n\r\n  const handleLogout = async () => {\r\n    setLoggingOut(true);\r\n    await dispatch(logoutAction()).then(() => {\r\n      navigate(\"/admin/signin\");\r\n    });\r\n    setLoggingOut(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"border-b border-gray-200 sticky top-0 left-0 z-30 bg-white rounded-md\">\r\n      <ul className=\"flex flex-wrap -mb-px text-sm font-medium text-center text-gray-500\">\r\n        <li className=\"mr-2 flex items-center\">\r\n          <span\r\n            className={`cursor-pointer inline-flex items-center px-2 py-2 border-b-2 rounded-t-lg ${\r\n              activeTab === \"logs\"\r\n                ? \"border-blue-500 bg-primary rounded-md text-white\"\r\n                : \"border-transparent hover:text-gray-600 hover:border-gray-300\"\r\n            }`}\r\n            onClick={() => handleTabClick(\"logs\")}\r\n          >\r\n            <BsWindowStack className=\"mr-1\" />\r\n            Logs\r\n          </span>\r\n        </li>\r\n        <li className=\"mr-2 flex items-center\">\r\n          <span\r\n            className={`cursor-pointer inline-flex items-center px-2 py-2 border-b-2 rounded-t-lg ${\r\n              activeTab === \"settings\"\r\n                ? \"border-blue-500 bg-primary rounded-md text-white\"\r\n                : \"border-transparent hover:text-gray-600 hover:border-gray-300\"\r\n            }`}\r\n            onClick={() => handleTabClick(\"settings\")}\r\n          >\r\n            <IoSettingsOutline className=\"mr-1\" />\r\n            Settings\r\n          </span>\r\n        </li>\r\n        <li className=\"mr-2 flex items-center\">\r\n          <span\r\n            className={`cursor-pointer inline-flex items-center px-2 py-2 border-b-2 rounded-t-lg ${\r\n              activeTab === \"Community Management\"\r\n                ? \"border-blue-500 bg-primary rounded-md text-white\"\r\n                : \"border-transparent hover:text-gray-600 hover:border-gray-300\"\r\n            }`}\r\n            onClick={() => handleTabClick(\"Community Management\")}\r\n          >\r\n            <BsPeople className=\"mr-1\" />\r\n            Community Management\r\n          </span>\r\n        </li>\r\n        <li className=\"mr-2 flex items-center\">\r\n          <span\r\n            className={`cursor-pointer inline-flex items-center px-2 py-2 border-b-2 rounded-t-md ${\r\n              activeTab === \"logout\"\r\n                ? \"border-blue-500 bg-primary rounded-md text-white\"\r\n                : \"border-transparent hover:text-red-600 hover:border-red-600\"\r\n            }`}\r\n            onClick={handleLogout}\r\n          >\r\n            <BiLogOut className=\"mr-1\" />\r\n            <span\r\n              className={`${\r\n                activeTab === \"logout\"\r\n                  ? \"group-hover:text-gray-500\"\r\n                  : \"group-hover:text-red-600\"\r\n              }`}\r\n            >\r\n              {loggingOut ? (\r\n                <ButtonLoadingSpinner loadingText={\"Logging out...\"} />\r\n              ) : (\r\n                \"Logout\"\r\n              )}\r\n            </span>\r\n          </span>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tab;\r\n","import { useState, useEffect } from \"react\";\r\n\r\nconst CurrentTime = () => {\r\n  const [time, setTime] = useState(new Date().toLocaleString());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setTime(new Date().toLocaleString());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  const date = new Date(time);\r\n  const weekday = date.toLocaleDateString(\"en-US\", { weekday: \"long\" });\r\n  const month = date.toLocaleDateString(\"en-US\", { month: \"long\" });\r\n  const day = date.toLocaleDateString(\"en-US\", { day: \"numeric\" });\r\n  const year = date.toLocaleDateString(\"en-US\", { year: \"numeric\" });\r\n  const hours = date.getHours() % 12 || 12;\r\n  const minutes = date.getMinutes().toString().padStart(2, \"0\");\r\n  const seconds = date.getSeconds().toString().padStart(2, \"0\");\r\n  const amPm = date.getHours() >= 12 ? \"PM\" : \"AM\";\r\n  const timeString = `${hours}:${minutes}:${seconds} ${amPm}`;\r\n\r\n  return (\r\n    <div className=\"text-sm text-gray-800 mt-1\">\r\n      {`${weekday}, ${month} ${day}, ${year} ${timeString}`}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentTime;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getLogsAction,\r\n  deleteLogsAction,\r\n} from \"../../redux/actions/adminActions\";\r\nimport CurrentTime from \"../shared/CurrentTime\";\r\nimport ButtonLoadingSpinner from \"../loader/ButtonLoadingSpinner\";\r\nimport CommonLoading from \"../loader/CommonLoading\";\r\nimport { FcRefresh } from \"react-icons/fc\";\r\n\r\nconst Logs = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [clearing, setClearing] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n  const logs = useSelector((state) => state.admin?.logs);\r\n\r\n  const fetchLogs = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await dispatch(getLogsAction());\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleCleanup = async () => {\r\n    try {\r\n      setClearing(true);\r\n      await dispatch(deleteLogsAction());\r\n    } finally {\r\n      setClearing(false);\r\n    }\r\n  };\r\n\r\n  const handleRefresh = async () => {\r\n    try {\r\n      setLoading(true);\r\n      await fetchLogs();\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchLogs();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [logs?.length]);\r\n\r\n  if (loading || !logs) {\r\n    return (\r\n      <div className=\"flex items-center justify-center mt-5\">\r\n        <CommonLoading />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"bg-white flex flex-col items-center justify-center mt-3 rounded-md\">\r\n      <div className=\"p-4 shadow-md rounded relative xl:min-w-[1200px] lg:min-w-[1000px] md:min-w-[800px]\">\r\n        <div className=\"flex items-center justify-between mb-4\">\r\n          <h1 className=\"text-2xl font-bold text-gray-800\">\r\n            User Activity Logs\r\n          </h1>\r\n          <CurrentTime />\r\n        </div>\r\n\r\n        <div className=\"flex justify-between items-center mb-4 border-b border-gray-200 pb-2\">\r\n          <div className=\"text-sm italic text-gray-600\">{`Showing ${logs.length} items from the last 7 days`}</div>\r\n\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button onClick={handleRefresh}>\r\n              <FcRefresh />\r\n            </button>\r\n            <button\r\n              className={`bg-blue-500 text-white text-sm py-2 px-4 rounded hover:bg-blue-700 ${\r\n                clearing ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n              } ${logs.length === 0 ? \"hidden\" : \"\"}`}\r\n              onClick={handleCleanup}\r\n              disabled={clearing || logs.length === 0}\r\n            >\r\n              {clearing ? (\r\n                <ButtonLoadingSpinner loadingText=\"Clearing...\" />\r\n              ) : (\r\n                \"Clear Logs\"\r\n              )}\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {!loading ? (\r\n          logs.length === 0 ? (\r\n            <div className=\"text-gray-500 text-lg\">No logs found</div>\r\n          ) : (\r\n            <>\r\n              <div className=\"h-[430px] relative overflow-auto\">\r\n                <div className=\"w-full rounded\">\r\n                  <div className=\"grid grid-cols-5 gap-5 items-center border-b py-2 font-semibold text-gray-800\">\r\n                    <p className=\"text-center\">Timestamp</p>\r\n                    <p>Message</p>\r\n                    <p>Email Used</p>\r\n                    <p>Level</p>\r\n                    <p>Context Data</p>\r\n                  </div>\r\n                  {logs.map((log) => (\r\n                    <div\r\n                      key={log._id}\r\n                      className=\"grid grid-cols-5 gap-5 items-center border-b py-2 text-sm text-gray-700\"\r\n                    >\r\n                      <span className=\"flex-col justify-center items-center text-center font-mono\">\r\n                        <p>{log.relativeTimestamp}</p>\r\n                        <p className=\"text-xs\">{log.formattedTimestamp}</p>\r\n                      </span>\r\n                      <td\r\n                        className={`${\r\n                          log.level === \"info\"\r\n                            ? \"text-blue-500\"\r\n                            : log.level === \"warn\"\r\n                            ? \"text-orange-500\"\r\n                            : log.level === \"error\"\r\n                            ? \"text-red-600\"\r\n                            : \"\"\r\n                        }`}\r\n                      >\r\n                        <span className=\"capitalize\">{log.type}: </span>\r\n                        <span>{log.message}</span>\r\n                      </td>\r\n                      <p>{log.email}</p>\r\n                      <td className=\"\">\r\n                        <span\r\n                          className={`rounded-full px-2 py-1 text-sm font-semibold ${\r\n                            log.level === \"error\"\r\n                              ? \"bg-red-500 text-white\"\r\n                              : log.level === \"warn\"\r\n                              ? \"bg-orange-500 text-white\"\r\n                              : \"bg-blue-500 text-white\"\r\n                          }`}\r\n                        >\r\n                          {log.level}\r\n                        </span>\r\n                      </td>\r\n                      <td className=\"\">\r\n                        <ul className=\"list-disc list-inside\">\r\n                          {log.contextData &&\r\n                            Object.entries(log.contextData).map(\r\n                              ([key, value]) => (\r\n                                <li key={key}>\r\n                                  <span className=\"font-medium text-blue-500\">\r\n                                    {key}:{\" \"}\r\n                                  </span>\r\n                                  {value}\r\n                                </li>\r\n                              )\r\n                            )}\r\n                        </ul>\r\n                      </td>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex justify-center text-sm italic text-gray-600 mt-2\">\r\n                logs are automatically deleted after 7 days\r\n              </div>\r\n            </>\r\n          )\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logs;\r\n","import { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getServicePreferencesAction,\r\n  updateServicePreferencesAction,\r\n} from \"../../redux/actions/adminActions\";\r\n\r\nconst Settings = () => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [isSuccess, setIsSuccess] = useState(false);\r\n  const servicePreferences = useSelector(\r\n    (state) => state.admin?.servicePreferences\r\n  );\r\n  const [usePerspectiveAPI, setUsePerspectiveAPI] = useState(false);\r\n  const [\r\n    categoryFilteringServiceProvider,\r\n    setCategoryFilteringServiceProvider,\r\n  ] = useState(\"\");\r\n  const [categoryFilteringRequestTimeout, setCategoryFilteringRequestTimeout] =\r\n    useState(0);\r\n\r\n  useEffect(() => {\r\n    dispatch(getServicePreferencesAction());\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (servicePreferences) {\r\n      setUsePerspectiveAPI(servicePreferences.usePerspectiveAPI);\r\n      setCategoryFilteringServiceProvider(\r\n        servicePreferences.categoryFilteringServiceProvider\r\n      );\r\n      setCategoryFilteringRequestTimeout(\r\n        servicePreferences.categoryFilteringRequestTimeout\r\n      );\r\n      setIsLoading(false);\r\n    }\r\n  }, [servicePreferences]);\r\n\r\n  const handleUpdate = async () => {\r\n    setIsUpdating(true);\r\n    setIsSuccess(false);\r\n    try {\r\n      await dispatch(\r\n        updateServicePreferencesAction({\r\n          usePerspectiveAPI,\r\n          categoryFilteringServiceProvider,\r\n          categoryFilteringRequestTimeout,\r\n        })\r\n      );\r\n      setIsSuccess(true);\r\n      setTimeout(() => {\r\n        setIsSuccess(false);\r\n      }, 3000);\r\n    } finally {\r\n      setIsUpdating(false);\r\n    }\r\n  };\r\n\r\n  if (isLoading || !servicePreferences) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-5 w-full border rounded-md bg-white mt-3\">\r\n      <h2 className=\"font-semibold mb-4 border-b pb-2 text-center text-gray-700\">\r\n        Service Preferences\r\n      </h2>\r\n\r\n      {isSuccess && (\r\n        <div className=\"bg-green-100 text-green-800 p-2 mb-4 rounded\">\r\n          Service Preferences updated successfully!\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"flex items-center mb-4\">\r\n        <div>Use Perspective API for content moderation</div>\r\n        <div className=\"ml-auto\">\r\n          <input\r\n            className=\"w-5 h-5 text-blue-600 bg-gray-100 border-gray-300 rounded focus:ring-blue-500 dark:focus:ring-blue-600 dark:ring-offset-gray-800 focus:ring-2 dark:bg-gray-700 dark:border-gray-600\"\r\n            type=\"checkbox\"\r\n            checked={usePerspectiveAPI}\r\n            onChange={(e) => setUsePerspectiveAPI(e.target.checked)}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex items-center mb-4\">\r\n        <div>Category filtering service provider</div>\r\n        <div className=\"ml-auto\">\r\n          <select\r\n            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n            value={categoryFilteringServiceProvider}\r\n            onChange={(e) =>\r\n              setCategoryFilteringServiceProvider(e.target.value)\r\n            }\r\n          >\r\n            <option value=\"\">Select a provider</option>\r\n            <option value=\"TextRazor\">TextRazor</option>\r\n            <option value=\"InterfaceAPI\">InterfaceAPI</option>\r\n            <option value=\"ClassifierAPI\">ClassifierAPI</option>\r\n            <option value=\"disabled\">Disabled</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex items-center mb-4\">\r\n        <div>Category filtering request timeout (ms)</div>\r\n        <div className=\"ml-auto\">\r\n          <input\r\n            className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n            type=\"number\"\r\n            value={categoryFilteringRequestTimeout}\r\n            min={0}\r\n            max={500000}\r\n            required\r\n            onChange={(e) => {\r\n              setCategoryFilteringRequestTimeout(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex justify-end\">\r\n        <button\r\n          className=\"bg-blue-500 text-white px-4 py-2 rounded disabled:opacity-50\"\r\n          onClick={handleUpdate}\r\n          disabled={isUpdating}\r\n        >\r\n          {isUpdating ? \"Updating...\" : \"Update\"}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Settings;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  getCommunitiesAction,\r\n  getModeratorsAction,\r\n  addModeratorAction,\r\n  removeModeratorAction,\r\n  getCommunityAction,\r\n} from \"../../redux/actions/adminActions\";\r\n\r\nconst CommunityManagement = () => {\r\n  const dispatch = useDispatch();\r\n  const communities = useSelector((state) => state.admin?.communities);\r\n  const moderators = useSelector((state) => state.admin?.moderators);\r\n  const community = useSelector((state) => state.admin?.community);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCommunitiesAction());\r\n    dispatch(getModeratorsAction());\r\n  }, [dispatch]);\r\n\r\n  const [selectedCommunity, setSelectedCommunity] = useState(null);\r\n  const [selectedCommunityData, setSelectedCommunityData] = useState(null);\r\n  const [selectedModerator, setSelectedModerator] = useState(null);\r\n  const [newModerator, setNewModerator] = useState(\"\");\r\n  const [isUpdating, setIsUpdating] = useState(false);\r\n  const [isChangingCommunity, setIsChangingCommunity] = useState(false);\r\n\r\n  const handleCommunitySelect = async (community) => {\r\n    setSelectedCommunity(community);\r\n    setIsChangingCommunity(true);\r\n    await dispatch(getCommunityAction(community._id));\r\n    setIsChangingCommunity(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSelectedCommunityData(community);\r\n  }, [community]);\r\n\r\n  const handleModeratorSelect = (moderator) => {\r\n    setSelectedModerator(moderator);\r\n  };\r\n\r\n  const handleRemoveModerator = async (moderator) => {\r\n    setIsUpdating(true);\r\n    await dispatch(\r\n      removeModeratorAction(selectedCommunityData._id, moderator._id)\r\n    );\r\n    await dispatch(getCommunityAction(selectedCommunityData._id));\r\n    await dispatch(addModeratorAction(selectedCommunityData._id, newModerator));\r\n    await dispatch(getModeratorsAction());\r\n    setIsUpdating(false);\r\n  };\r\n  const handleAddModerator = async () => {\r\n    setIsUpdating(true);\r\n    await dispatch(addModeratorAction(selectedCommunityData._id, newModerator));\r\n    await dispatch(getCommunityAction(selectedCommunityData._id));\r\n    await dispatch(getModeratorsAction());\r\n    setNewModerator(\"\");\r\n    setIsUpdating(false);\r\n  };\r\n\r\n  if (!communities || !moderators) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex gap-2 h-[85vh] w-full mt-3 border rounded-md\">\r\n      {/* Left column */}\r\n      <div className=\"flex flex-col w-full bg-white shadow-inner rounded-md border-r\">\r\n        <h1 className=\"text-lg font-bold p-4 text-center border-b-2\">\r\n          Communities\r\n        </h1>\r\n        <div className=\"flex flex-col overflow-y-auto\">\r\n          {communities.map((community) => (\r\n            <div\r\n              key={community._id}\r\n              className={`p-4 cursor-pointer hover:bg-background border-b flex items-center ${\r\n                selectedCommunity?._id === community._id ? \"bg-gray-200\" : \"\"\r\n              }`}\r\n              onClick={() => handleCommunitySelect(community)}\r\n            >\r\n              <img\r\n                src={community.banner}\r\n                alt={community.name}\r\n                className=\"w-10 h-10 rounded-full mr-2 md:mr-4\"\r\n              />\r\n              <span className=\"text-gray-700 text-xs md:text-base\">\r\n                {community.name}\r\n              </span>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right column */}\r\n      <div className=\"flex flex-col w-full bg-white rounded-md px-5 py-5 border-l\">\r\n        {isChangingCommunity ? (\r\n          <div className=\"flex justify-center items-center h-screen\">\r\n            <span className=\"admin-loader\"></span>\r\n          </div>\r\n        ) : selectedCommunityData ? (\r\n          <>\r\n            <h1 className=\"font-bold text-lg border-b border-black pb-1 mb-2\">\r\n              {selectedCommunityData.name}\r\n            </h1>\r\n\r\n            {isUpdating && (\r\n              <div className=\"bg-green-100 text-green-800 p-2 mb-4 rounded\">\r\n                Updating...\r\n              </div>\r\n            )}\r\n            <span className=\"text-sm\">\r\n              Total Moderators: {selectedCommunityData.moderatorCount}\r\n            </span>\r\n            <span className=\"text-sm\">\r\n              Total Members: {selectedCommunityData.memberCount}\r\n            </span>\r\n\r\n            <div className=\"flex flex-col md:flex-row gap-5\">\r\n              {/* Moderators list */}\r\n              <div className=\"flex flex-col gap-2 w-full md:w-1/2\">\r\n                <h2 className=\"font-medium mb-2\">Moderators</h2>\r\n                {selectedCommunityData.moderators?.length === 0 && (\r\n                  <span>No moderators</span>\r\n                )}\r\n                <div className=\"flex flex-col\">\r\n                  {selectedCommunityData.moderators?.map((moderator) => (\r\n                    <div\r\n                      key={moderator._id}\r\n                      className={`p-2 cursor-pointer border flex flex-col md:flex-row gap-2 justify-between items-center rounded ${\r\n                        selectedModerator?._id === moderator._id ? \"\" : \"\"\r\n                      }`}\r\n                      onClick={() => handleModeratorSelect(moderator)}\r\n                    >\r\n                      <span className=\"font-medium\">{moderator.name}</span>\r\n                      <button\r\n                        disabled={isUpdating}\r\n                        className={` bg-red-500 px-4 py-1 text-sm  text-white rounded hover:bg-red-700 ${\r\n                          isUpdating ? \"opacity-50 cursor-not-allowed\" : \"\"\r\n                        }`}\r\n                        onClick={() => handleRemoveModerator(moderator)}\r\n                      >\r\n                        Remove\r\n                      </button>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Add moderator form */}\r\n              <div className=\"flex flex-col w-full gap-2 md:w-1/2\">\r\n                <h2 className=\"font-medium mb-2\">Add Moderator</h2>\r\n                <div className=\"flex flex-col gap-2 md:flex-row\">\r\n                  <select\r\n                    className=\"bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 \"\r\n                    value={newModerator}\r\n                    onChange={(e) => setNewModerator(e.target.value)}\r\n                  >\r\n                    <option value=\"\">Select a moderator</option>\r\n                    {moderators?.map((moderator) => (\r\n                      <option key={moderator._id} value={moderator._id}>\r\n                        {moderator.name}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <button\r\n                    disabled={\r\n                      !newModerator ||\r\n                      isUpdating ||\r\n                      selectedCommunityData.moderators?.find(\r\n                        (moderator) => moderator._id === newModerator\r\n                      )\r\n                    }\r\n                    className={`p-2 bg-blue-500 text-white rounded hover:bg-blue-700 ${\r\n                      !newModerator ||\r\n                      isUpdating ||\r\n                      selectedCommunityData.moderators?.find(\r\n                        (moderator) => moderator._id === newModerator\r\n                      )\r\n                        ? \"opacity-50 cursor-not-allowed\"\r\n                        : \"\"\r\n                    }`}\r\n                    onClick={handleAddModerator}\r\n                  >\r\n                    Add\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <div className=\"flex flex-col items-center justify-center h-full\">\r\n            <span className=\"font-medium text-gray-400\">\r\n              Select a community to view details\r\n            </span>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommunityManagement;\r\n","import { useState, useEffect } from \"react\";\r\nimport Tab from \"../components/admin/Tab\";\r\nimport Logs from \"../components/admin/Logs\";\r\nimport Settings from \"../components/admin/Settings\";\r\nimport CommunityManagement from \"../components/admin/CommunityManagement\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { logoutAction } from \"../redux/actions/adminActions\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nconst AdminPanel = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  const [activeTab, setActiveTab] = useState(\"logs\");\r\n  const adminPanelError = useSelector((state) => state.admin?.adminPanelError);\r\n\r\n  const handleTabClick = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (adminPanelError === \"Unauthorized\") {\r\n      dispatch(logoutAction()).then(() => {\r\n        navigate(\"/admin/signin\");\r\n      });\r\n    }\r\n  }, [adminPanelError, dispatch, navigate]);\r\n\r\n  return (\r\n    <div className=\"pt-5 max-w-6xl mx-auto flex flex-col justify-center items-center \">\r\n      <Tab activeTab={activeTab} handleTabClick={handleTabClick} />\r\n\r\n      {activeTab === \"logs\" && <Logs />}\r\n      {activeTab === \"settings\" && <Settings />}\r\n      {activeTab === \"Community Management\" && <CommunityManagement />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminPanel;\r\n","import { ADMIN_API, handleApiError } from \"./utils\";\r\n\r\nexport const signIn = async (credential) => {\r\n  try {\r\n    const res = await ADMIN_API.post(\"/signin\", credential);\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getServicePreferences = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/preferences\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const updateServicePreferences = async (preferences) => {\r\n  try {\r\n    await ADMIN_API.put(\"/preferences\", preferences);\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getLogs = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/logs\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const deleteLogs = async () => {\r\n  try {\r\n    await ADMIN_API.delete(\"/logs\");\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getCommunities = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/communities\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getCommunity = async (communityId) => {\r\n  try {\r\n    const res = await ADMIN_API.get(`/community/${communityId}`);\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const getModerators = async () => {\r\n  try {\r\n    const res = await ADMIN_API.get(\"/moderators\");\r\n    return { error: null, data: res.data };\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const addModerator = async (communityId, moderatorId) => {\r\n  try {\r\n    await ADMIN_API.patch(\"/add-moderators\", null, {\r\n      params: { communityId, moderatorId },\r\n    });\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n\r\nexport const removeModerator = async (communityId, moderatorId) => {\r\n  try {\r\n    await ADMIN_API.patch(\"/remove-moderators\", null, {\r\n      params: { communityId, moderatorId },\r\n    });\r\n  } catch (error) {\r\n    return handleApiError(error);\r\n  }\r\n};\r\n","import * as api from \"../api/adminAPI\";\r\nimport * as types from \"../constants/adminConstants\";\r\n\r\nexport const signInAction = (credential) => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.signIn(credential);\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    localStorage.setItem(\"admin\", JSON.stringify(data));\r\n    dispatch({\r\n      type: types.SIGN_IN_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.SIGN_IN_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const logoutAction = () => async (dispatch) => {\r\n  try {\r\n    localStorage.removeItem(\"admin\");\r\n    dispatch({\r\n      type: types.LOGOUT_SUCCESS,\r\n    });\r\n  } catch (error) {}\r\n};\r\n\r\nexport const getLogsAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getLogs();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_LOGS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_LOGS_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteLogsAction = () => async (dispatch) => {\r\n  try {\r\n    const { error } = await api.deleteLogs();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.DELETE_LOGS_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.DELETE_LOGS_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getServicePreferencesAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getServicePreferences();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_SERVICE_PREFERENCES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_SERVICE_PREFERENCES_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateServicePreferencesAction =\r\n  (preferences) => async (dispatch) => {\r\n    try {\r\n      const { error } = await api.updateServicePreferences(preferences);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      dispatch({\r\n        type: types.UPDATE_SERVICE_PREFERENCES_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.UPDATE_SERVICE_PREFERENCES_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const getCommunitiesAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getCommunities();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_COMMUNITIES_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_COMMUNITIES_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCommunityAction = (communityId) => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getCommunity(communityId);\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n\r\n    dispatch({\r\n      type: types.GET_COMMUNITY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_COMMUNITY_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const getModeratorsAction = () => async (dispatch) => {\r\n  try {\r\n    const { error, data } = await api.getModerators();\r\n    if (error) {\r\n      throw new Error(error);\r\n    }\r\n    dispatch({\r\n      type: types.GET_MODERATORS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: types.GET_MODERATORS_FAIL,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const addModeratorAction =\r\n  (communityId, moderatorId) => async (dispatch) => {\r\n    try {\r\n      const { error } = await api.addModerator(communityId, moderatorId);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      dispatch({\r\n        type: types.ADD_MODERATOR_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.ADD_MODERATOR_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const removeModeratorAction =\r\n  (communityId, moderatorId) => async (dispatch) => {\r\n    try {\r\n      const { error } = await api.removeModerator(communityId, moderatorId);\r\n      if (error) {\r\n        throw new Error(error);\r\n      }\r\n      dispatch({\r\n        type: types.REMOVE_MODERATOR_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: types.REMOVE_MODERATOR_FAIL,\r\n        payload: error.message,\r\n      });\r\n    }\r\n  };\r\n"],"names":["_ref","activeTab","handleTabClick","navigate","useNavigate","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","loggingOut","setLoggingOut","handleLogout","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","logoutAction","then","stop","apply","arguments","_jsx","className","children","_jsxs","concat","onClick","BsWindowStack","IoSettingsOutline","BsPeople","BiLogOut","ButtonLoadingSpinner","loadingText","Date","toLocaleString","time","setTime","useEffect","interval","setInterval","clearInterval","date","weekday","toLocaleDateString","month","day","year","hours","getHours","minutes","getMinutes","toString","padStart","seconds","getSeconds","amPm","timeString","loading","setLoading","_useState3","_useState4","clearing","setClearing","logs","useSelector","state","_state$admin","admin","fetchLogs","getLogsAction","finish","handleCleanup","_callee2","_context2","deleteLogsAction","handleRefresh","_ref3","_callee3","_context3","t0","length","CommonLoading","CurrentTime","FcRefresh","disabled","_Fragment","map","log","relativeTimestamp","formattedTimestamp","level","type","message","email","contextData","Object","entries","_ref4","_ref5","key","value","_id","isLoading","setIsLoading","isUpdating","setIsUpdating","_useState5","_useState6","isSuccess","setIsSuccess","servicePreferences","_useState7","_useState8","usePerspectiveAPI","setUsePerspectiveAPI","_useState9","_useState10","categoryFilteringServiceProvider","setCategoryFilteringServiceProvider","_useState11","_useState12","categoryFilteringRequestTimeout","setCategoryFilteringRequestTimeout","getServicePreferencesAction","handleUpdate","updateServicePreferencesAction","setTimeout","checked","onChange","e","target","min","max","required","_selectedCommunityDat","_selectedCommunityDat2","_selectedCommunityDat3","_selectedCommunityDat4","communities","moderators","_state$admin2","community","_state$admin3","getCommunitiesAction","getModeratorsAction","selectedCommunity","setSelectedCommunity","selectedCommunityData","setSelectedCommunityData","selectedModerator","setSelectedModerator","newModerator","setNewModerator","isChangingCommunity","setIsChangingCommunity","handleCommunitySelect","getCommunityAction","_x","handleRemoveModerator","moderator","removeModeratorAction","addModeratorAction","_x2","handleAddModerator","src","banner","alt","name","moderatorCount","memberCount","handleModeratorSelect","find","setActiveTab","adminPanelError","Tab","tab","Logs","Settings","CommunityManagement","signIn","credential","res","ADMIN_API","post","sent","abrupt","error","data","handleApiError","getServicePreferences","get","updateServicePreferences","preferences","put","getLogs","_callee4","_context4","deleteLogs","_callee5","_context5","delete","getCommunities","_ref6","_callee6","_context6","getCommunity","_ref7","_callee7","communityId","_context7","_x3","getModerators","_ref8","_callee8","_context8","addModerator","_ref9","_callee9","moderatorId","_context9","patch","params","_x4","_x5","removeModerator","_ref10","_callee10","_context10","_x6","_x7","signInAction","_yield$api$signIn","api","Error","localStorage","setItem","JSON","stringify","types","payload","removeItem","_yield$api$getLogs","_yield$api$deleteLogs","_yield$api$getService","_yield$api$updateServ","_yield$api$getCommuni","_yield$api$getCommuni2","_x8","_yield$api$getModerat","_x9","_yield$api$addModerat","_x10","_ref11","_callee11","_yield$api$removeMode","_context11","_x11"],"sourceRoot":""}